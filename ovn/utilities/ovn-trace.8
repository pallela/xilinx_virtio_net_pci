'\" p
.\" -*- nroff -*-
.TH "ovn-trace" 8 "ovn-trace" "Open vSwitch 2\[char46]6\[char46]90" "Open vSwitch Manual"
.fp 5 L CR              \\" Make fixed-width font available as \\fL.
.de TQ
.  br
.  ns
.  TP "\\$1"
..
.de ST
.  PP
.  RS -0.15in
.  I "\\$1"
.  RE
..
.SH "NAME"
.PP
ovn-trace \- Open Virtual Network logical network tracing utility
.SH "SYNOPSIS"
.PP
\fBovn\-trace\fR [\fIoptions\fR] \fIdatapath\fR \fImicroflow\fR
.PP
\fBovn\-trace\fR [\fIoptions\fR] \fB\-\-detach\fR
.SH "DESCRIPTION"
.PP
This utility simulates packet forwarding within an OVN logical network\[char46]
It can be used to run through ``what-if\(cq\(cq scenarios: if a packet
originates at a logical port, what will happen to it and where will it
ultimately end up?  Users already familiar with the Open vSwitch
\fBofproto/trace\fR command described in
\fBovs\-vswitch\fR(8) will find \fBovn\-trace\fR to be a
similar tool for logical networks\[char46]
.PP
\fBovn\-trace\fR works by reading the \fBLogical_Flow\fR and
other tables from the OVN southbound database (see
\fBovn\-sb\fR(5))\[char46]  It simulates a packet\(cqs path through logical
networks by repeatedly looking it up in the logical flow table, following
the entire tree of possibilities\[char46]
.PP
\fBovn\-trace\fR simulates only the OVN logical network\[char46]  It does
not simulate the physical elements on which the logical network is
layered\[char46]  This means that, for example, it is unimportant how VMs are
distributed among hypervisors, or whether their hypervisors are
functioning and reachable, so \fBovn\-trace\fR will yield the same
results regardless\[char46]  There is one important exception:
\fBovn\-northd\fR, the daemon that generates the logical flows that
\fBovn\-trace\fR simulates, treats logical ports differently based
on whether they are up or down\[char46]  Thus, if you see surprising results,
ensure that the ports involved in a simulation are up\[char46]
.PP
The simplest way to use \fBovn\-trace\fR is to provide
\fIdatapath\fR and \fImicroflow\fR arguments on the command
line\[char46]  In this case, it simulates the behavior of a single packet and
exits\[char46]  For an alternate usage model, see \fBDaemon Mode\fR below\[char46]
.PP
The \fIdatapath\fR argument specifies the name of a logical
datapath\[char46]  Acceptable names are the \fBname\fR from the northbound
\fBLogical_Switch\fR or \fBLogical_Router\fR table, the
UUID of a record from one of those tables, or the UUID of a record from
the southbound \fBDatapath_Binding\fR table\[char46]
.PP
The \fImicroflow\fR argument describes the packet whose forwarding
is to be simulated, in the syntax of an OVN logical expression, as
described in \fBovn\-sb\fR(5), to express constraints\[char46]  The parser
understands prerequisites; for example, if the expression refers to
\fBip4\[char46]src\fR, there is no need to explicitly state
\fBip4\fR or \fBeth\[char46]type == 0x800\fR\[char46]
.PP
For reasonable L2 behavior, the microflow should include at least
\fBinport\fR and \fBeth\[char46]dst\fR, plus \fBeth\[char46]src\fR
if port security is enabled\[char46]  For example:
.PP
.nf
\fB
.br
\fB    inport == \(dqlp11\(dq && eth\[char46]src == 00:01:02:03:04:05 && eth\[char46]dst == ff:ff:ff:ff:ff:ff
.br
\fB
.fi
.PP
For reasonable L3 behavior, \fImicroflow\fR should also include
\fBip4\[char46]src\fR and \fBip4\[char46]dst\fR (or \fBip6\[char46]src\fR
and \fBip6\[char46]dst\fR) and \fBip\[char46]ttl\fR\[char46]  For example:
.PP
.nf
\fB
.br
\fB    inport == \(dqlp111\(dq && eth\[char46]src == f0:00:00:00:01:11 && eth\[char46]dst == 00:00:00:00:ff:11
.br
\fB    && ip4\[char46]src == 192\[char46]168\[char46]11\[char46]1 && ip4\[char46]dst == 192\[char46]168\[char46]22\[char46]2 && ip\[char46]ttl == 64
.br
\fB
.fi
.PP
Here\(cqs an ARP microflow example:
.PP
.nf
\fB
.br
\fB    inport == \(dqlp123\(dq
.br
\fB    && eth\[char46]dst == ff:ff:ff:ff:ff:ff && eth\[char46]src == f0:00:00:00:01:11
.br
\fB    && arp\[char46]op == 1 && arp\[char46]sha == f0:00:00:00:01:11 && arp\[char46]spa == 192\[char46]168\[char46]1\[char46]11
.br
\fB    && arp\[char46]tha == ff:ff:ff:ff:ff:ff && arp\[char46]tpa == 192\[char46]168\[char46]2\[char46]22
.br
\fB
.fi
.PP
\fBovn\-trace\fR will reject erroneous microflow expressions, which
beyond syntax errors fall into two categories\[char46]  First, they can be
ambiguous\[char46]  For example, \fBtcp\[char46]src == 80\fR is ambiguous because
it does not state IPv4 or IPv6 as the Ethernet type\[char46]  \fBip4
&& tcp\[char46]src > 1024\fR is also ambiguous because it does not
constrain bits of \fBtcp\[char46]src\fR to particular values\[char46]  Second,
they can be contradictory, e\[char46]g\[char46] \fBip4 && ip6\fR\[char46]
.SH "OUTPUT"
.PP
\fBovn\-trace\fR supports the three different forms of output, each
described in a separate section below\[char46]  Regardless of the selected output
format, \fBovn\-trace\fR starts the output with a line that shows
the microflow being traced in OpenFlow syntax\[char46]
.SS "Detailed Output"
.PP
The detailed form of output is also the default form\[char46]  This form groups
output into sections headed up by the ingress or egress pipeline being
traversed\[char46]  Each pipeline lists each table that was visited (by number and
name), the \fBovn\-northd\fR source file and line number of the code
that added the flow, the match expression and priority of the logical flow
that was matched, and the actions that were executed\[char46]
.PP
The execution of OVN logical actions naturally forms a ``control stack\(cq\(cq
that resembles that of a program in conventional programming languages
such as C or Java\[char46]  Because the \fBnext\fR action that calls into
another logical flow table for a lookup is a recursive construct, OVN
``programs\(cq\(cq in practice tend to form deep control stacks that, displayed
in the obvious way using additional indentation for each level, quickly
use up the horizontal space on all but the widest displays\[char46]  To make
detailed output more readable, without loss of generality,
\fBovn\-trace\fR omits indentation for ``tail recursion,\(cq\(cq that is,
when \fBnext\fR is the last action in a logical flow, it does not
indent details of the next table lookup more deeply\[char46]  Output still uses
indentation when it is needed for clarity\[char46]
.PP
OVN ``programs\(cq\(cq traces also tend to encounter long strings of logical
flows with match expression \fB1\fR (which matches every packet)
and the single action \fBnext;\fR\[char46]  These are uninteresting
and merely clutter output, so \fBovn\-trace\fR omits them
entirely even from detailed output\[char46]
.PP
The following excerpt from detailed \fBovn\-trace\fR output shows a
section for a packet traversing the ingress pipeline of logical datapath
\fBls1\fR with ingress logical port \fBlp111\fR\[char46]  The
packet matches a logical flow in table 0 (aka
\fBls_in_port_sec_l2\fR) with priority 50 and executes
\fBnext(1);\fR to pass to table 1\[char46]  Tables 1 through 11 are
trivial and omitted\[char46]  In table 12 (aka \fBls_in_l2_lkup\fR), the
packet matches a flow with priority 50 based on its Ethernet destination
address and the flow\(cqs actions output the packet to the
\fBlrp11\-attachement\fR logical port\[char46]
.PP
.nf
\fL
.br
\fL    ingress(dp=\(dqls1\(dq, inport=\(dqlp111\(dq)
.br
\fL    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.br
\fL    0\[char46] ls_in_port_sec_l2: inport == \(dqlp111\(dq, priority 50
.br
\fL    next(1);
.br
\fL    12\[char46] ls_in_l2_lkup: eth\[char46]dst == 00:00:00:00:ff:11, priority 50
.br
\fL    outport = \(dqlrp11\-attachment\(dq;
.br
\fL    output;
.br
\fL
.fi
.SS "Summary Output"
.PP
Summary output includes the logical pipelines visited by a packet and the
logical actions executed on it\[char46]  Compared to the detailed output,
however, it removes details of tables and logical flows traversed by a
packet\[char46]  It uses a format closer to that of a programming language and
does not attempt to avoid indentation\[char46]  The summary output equivalent to
the above detailed output fragment is:
.PP
.nf
\fL
.br
\fL    ingress(dp=\(dqls1\(dq, inport=\(dqlp111\(dq) {
.br
\fL    outport = \(dqlrp11\-attachment\(dq;
.br
\fL    output;
.br
\fL    \[char46]\[char46]\[char46]
.br
\fL    };
.br
\fL
.fi
.SS "Minimal Output"
.PP
Minimal output includes only actions that modify packet data (not
including OVN registers or metadata such as \fBoutport\fR) and
\fBoutput\fR actions that actually deliver a packet to a logical
port (excluding patch ports)\[char46]  The operands of actions that modify packet
data are displayed reduced to constants, e\[char46]g\[char46] \fBip4\[char46]dst =
reg0;\fR might be show as \fBip4\[char46]dst = 192\[char46]168\[char46]0\[char46]1;\fR if that
was the value actually loaded\[char46]  This yields output even simpler than the
summary format\[char46]  (Users familiar with Open vSwitch may recognize this as
similar in spirit to the datapath actions listed at the bottom of
\fBofproto/trace\fR output\[char46])
.PP
The minimal output format reflects the externally seen behavior of the
logical networks more than it does the implementation\[char46]  This makes this
output format the most suitable for use in regression tests, because it
is least likely to change when logical flow tables are rearranged without
semantic change\[char46]
.SH "DAEMON MODE"
.PP
If \fBovn\-trace\fR is invoked with the \fB\-\-detach\fR option
(see \fBDaemon Options\fR, below), it runs in the background as a
daemon and accepts commands from \fBovs\-appctl\fR (or another
JSON-RPC client) indefinitely\[char46]  The currently supported commands are
described below\[char46]
.PP
.RS
.TP
\fBtrace\fR [\fIoptions\fR] \fIdatapath\fR \fImicroflow\fR
Traces \fImicroflow\fR through \fIdatapath\fR and replies with
the results of the trace\[char46]  Accepts the \fIoptions\fR described under
\fBTrace Options\fR below\[char46]
.TP
\fBexit\fR
Causes \fBovn\-trace\fR to gracefully terminate\[char46]
.RE
.SH "OPTIONS"
.SS "Trace Options"
.RS
.TP
\fB\-\-detailed\fR
.TQ .5in
\fB\-\-summary\fR
.TQ .5in
\fB\-\-minimal\fR
These options control the form and level of detail in
\fBovn\-trace\fR output\[char46]  If more than one of these options is
specified, all of the selected forms are output, in the order listed
above, each headed by a banner line\[char46]  If none of these options is
given, \fB\-\-detailed\fR is the default\[char46]  See
\fBOutput\fR, above, for a description of each kind of output\[char46]
.TP
\fB\-\-all\fR
Selects all three forms of output\[char46]
.RE
.SS "Daemon Options"
.RS
.TP
\fB\-\-pidfile\fR[\fB=\fR\fIpidfile\fR]
Causes a file (by default, \fB\fIprogram\fB\[char46]pid\fR) to be
created indicating the PID of the running process\[char46]  If the
\fIpidfile\fR argument is not specified, or if it does not begin
with \fB/\fR, then it is created in \fB/usr/local/var/run/openvswitch\fR\[char46]
.IP
If \fB\-\-pidfile\fR is not specified, no pidfile is created\[char46]
.TP
\fB\-\-overwrite\-pidfile\fR
By default, when \fB\-\-pidfile\fR is specified and the specified
pidfile already exists and is locked by a running process, the daemon
refuses to start\[char46]  Specify \fB\-\-overwrite\-pidfile\fR to cause it
to instead overwrite the pidfile\[char46]
.IP
When \fB\-\-pidfile\fR is not specified, this option has no effect\[char46]
.TP
\fB\-\-detach\fR
Runs this program as a background process\[char46]  The process forks, and in the
child it starts a new session, closes the standard file descriptors (which
has the side effect of disabling logging to the console), and changes its
current directory to the root (unless \fB\-\-no\-chdir\fR is
specified)\[char46]  After the child completes its initialization, the parent
exits\[char46]
.TP
\fB\-\-monitor\fR
Creates an additional process to monitor this program\[char46]  If it dies due to
a signal that indicates a programming error (\fBSIGABRT\fR,
\fBSIGALRM\fR, \fBSIGBUS\fR, \fBSIGFPE\fR,
\fBSIGILL\fR, \fBSIGPIPE\fR, \fBSIGSEGV\fR,
\fBSIGXCPU\fR, or \fBSIGXFSZ\fR) then the monitor process
starts a new copy of it\[char46]  If the daemon dies or exits for another reason,
the monitor process exits\[char46]
.IP
This option is normally used with \fB\-\-detach\fR, but it also
functions without it\[char46]
.TP
\fB\-\-no\-chdir\fR
By default, when \fB\-\-detach\fR is specified, the deamon changes
its current working directory to the root directory after it detaches\[char46]
Otherwise, invoking the daemon from a carelessly chosen directory would
prevent the administrator from unmounting the file system that holds that
directory\[char46]
.IP
Specifying \fB\-\-no\-chdir\fR suppresses this behavior, preventing
the daemon from changing its current working directory\[char46]  This may be
useful for collecting core files, since it is common behavior to write
core dumps into the current working directory and the root directory is
not a good directory to use\[char46]
.IP
This option has no effect when \fB\-\-detach\fR is not specified\[char46]
.TP
\fB\-\-no\-self\-confinement\fR
By default this daemon will try to self-confine itself to work with files
under well-known directories whitelisted at build time\[char46]  It is better to
stick with this default behavior and not to use this flag unless some other
Access Control is used to confine daemon\[char46]  Note that in contrast to other
access control implementations that are typically enforced from
kernel-space (e\[char46]g\[char46] DAC or MAC), self-confinement is imposed from the
user-space daemon itself and hence should not be considered as a full
confinement strategy, but instead should be viewed as an additional layer
of security\[char46]
.TP
\fB\-\-user=\fR\fIuser\fR\fB:\fR\fIgroup\fR
Causes this program to run as a different user specified in
\fIuser\fR\fB:\fR\fIgroup\fR, thus dropping most of the
root privileges\[char46] Short forms \fIuser\fR and
\fB:\fR\fIgroup\fR are also allowed, with current user or
group assumed, respectively\[char46]  Only daemons started by the root user
accepts this argument\[char46]
.IP
On Linux, daemons will be granted \fBCAP_IPC_LOCK\fR and
\fBCAP_NET_BIND_SERVICES\fR before dropping root privileges\[char46]
Daemons that interact with a datapath, such as
\fBovs\-vswitchd\fR, will be granted two additional
capabilities, namely \fBCAP_NET_ADMIN\fR and
\fBCAP_NET_RAW\fR\[char46]  The capability change will apply even
if the new user is root\[char46]
.IP
On Windows, this option is not currently supported\[char46]  For security
reasons, specifying this option will cause the daemon process not to
start\[char46]
.RE
.SS "Logging Options"
.RS
.TP
\fB\-v\fR[\fIspec\fR]
.TQ .5in
\fB\-\-verbose=\fR[\fIspec\fR]
Sets logging levels\[char46]  Without any \fIspec\fR, sets the log level for
every module and destination to \fBdbg\fR\[char46]  Otherwise,
\fIspec\fR is a list of words separated by spaces or commas or
colons, up to one from each category below:
.RS
.IP \(bu
A valid module name, as displayed by the \fBvlog/list\fR command
on \fBovs\-appctl\fR(8), limits the log level change to the
specified module\[char46]
.IP \(bu
\fBsyslog\fR, \fBconsole\fR, or \fBfile\fR, to
limit the log level change to only to the system log, to the console,
or to a file, respectively\[char46]  (If \fB\-\-detach\fR is specified,
the daemon closes its standard file descriptors, so logging to the
console will have no effect\[char46])
.IP
On Windows platform, \fBsyslog\fR is accepted as a word and is
only useful along with the \fB\-\-syslog\-target\fR option (the
word has no effect otherwise)\[char46]
.IP \(bu
\fBoff\fR, \fBemer\fR, \fBerr\fR,
\fBwarn\fR, \fBinfo\fR, or \fBdbg\fR, to control
the log level\[char46]  Messages of the given severity or higher will be
logged, and messages of lower severity will be filtered out\[char46]
\fBoff\fR filters out all messages\[char46]  See
\fBovs\-appctl\fR(8) for a definition of each log level\[char46]
.RE
.IP
Case is not significant within \fIspec\fR\[char46]
.IP
Regardless of the log levels set for \fBfile\fR, logging to a file
will not take place unless \fB\-\-log\-file\fR is also specified (see
below)\[char46]
.IP
For compatibility with older versions of OVS, \fBany\fR is
accepted as a word but has no effect\[char46]
.TP
\fB\-v\fR
.TQ .5in
\fB\-\-verbose\fR
Sets the maximum logging verbosity level, equivalent to
\fB\-\-verbose=dbg\fR\[char46]
.TP
\fB\-vPATTERN:\fR\fIdestination\fR\fB:\fR\fIpattern\fR
.TQ .5in
\fB\-\-verbose=PATTERN:\fR\fIdestination\fR\fB:\fR\fIpattern\fR
Sets the log pattern for \fIdestination\fR to \fIpattern\fR\[char46]
Refer to \fBovs\-appctl\fR(8) for a description of the valid syntax
for \fIpattern\fR\[char46]
.TP
\fB\-vFACILITY:\fR\fIfacility\fR
.TQ .5in
\fB\-\-verbose=FACILITY:\fR\fIfacility\fR
Sets the RFC5424 facility of the log message\[char46] \fIfacility\fR can be
one of \fBkern\fR, \fBuser\fR, \fBmail\fR,
\fBdaemon\fR, \fBauth\fR, \fBsyslog\fR,
\fBlpr\fR, \fBnews\fR, \fBuucp\fR, \fBclock\fR,
\fBftp\fR, \fBntp\fR, \fBaudit\fR, \fBalert\fR,
\fBclock2\fR, \fBlocal0\fR, \fBlocal1\fR,
\fBlocal2\fR, \fBlocal3\fR, \fBlocal4\fR,
\fBlocal5\fR, \fBlocal6\fR or \fBlocal7\fR\[char46] If this
option is not specified, \fBdaemon\fR is used as the default for the
local system syslog and \fBlocal0\fR is used while sending a message
to the target provided via the \fB\-\-syslog\-target\fR option\[char46]
.TP
\fB\-\-log\-file\fR[\fB=\fR\fIfile\fR]
Enables logging to a file\[char46]  If \fIfile\fR is specified, then it is
used as the exact name for the log file\[char46]  The default log file name used if
\fIfile\fR is omitted is \fB/usr/local/var/log/openvswitch/\fIprogram\fB\[char46]log\fR\[char46]
.TP
\fB\-\-syslog\-target=\fR\fIhost\fR\fB:\fR\fIport\fR
Send syslog messages to UDP \fIport\fR on \fIhost\fR, in addition
to the system syslog\[char46]  The \fIhost\fR must be a numerical IP address,
not a hostname\[char46]
.TP
\fB\-\-syslog\-method=\fR\fImethod\fR
Specify \fImethod\fR as how syslog messages should be sent to syslog
daemon\[char46]  The following forms are supported:
.RS
.IP \(bu
\fBlibc\fR, to use the libc \fBsyslog()\fR function\[char46]
This is the default behavior\[char46]  Downside of using this options is that
libc adds fixed prefix to every message before it is actually sent to
the syslog daemon over \fB/dev/log\fR UNIX domain socket\[char46]
.IP \(bu
\fBunix:\fIfile\fB\fR, to use a UNIX domain socket
directly\[char46]  It is possible to specify arbitrary message format with this
option\[char46]  However, \fBrsyslogd 8\[char46]9\fR and older versions use hard
coded parser function anyway that limits UNIX domain socket use\[char46]  If
you want to use arbitrary message format with older
\fBrsyslogd\fR versions, then use UDP socket to localhost IP
address instead\[char46]
.IP \(bu
\fBudp:\fIip\fB:\fIport\fB\fR, to use a UDP socket\[char46]
With this method it is possible to use arbitrary message format also
with older \fBrsyslogd\fR\[char46]  When sending syslog messages over
UDP socket extra precaution needs to be taken into account, for
example, syslog daemon needs to be configured to listen on the
specified UDP port, accidental iptables rules could be interfering with
local syslog traffic and there are some security considerations that
apply to UDP sockets, but do not apply to UNIX domain sockets\[char46]
.RE
.RE
.SS "PKI Options"
.PP
PKI configuration is required to use SSL for the connection to the
database\[char46]
.RS
.TP
\fB\-p\fR \fIprivkey\[char46]pem\fR
.TQ .5in
\fB\-\-private\-key=\fR\fIprivkey\[char46]pem\fR
Specifies a PEM file containing the private key used as
identity for outgoing SSL connections\[char46]
.TP
\fB\-c\fR \fIcert\[char46]pem\fR
.TQ .5in
\fB\-\-certificate=\fR\fIcert\[char46]pem\fR
Specifies a PEM file containing a certificate that certifies the
private key specified on \fB\-p\fR or \fB\-\-private\-key\fR to be
trustworthy\[char46]  The certificate must be signed by the certificate
authority (CA) that the peer in SSL connections will use to verify it\[char46]
.TP
\fB\-C\fR \fIcacert\[char46]pem\fR
.TQ .5in
\fB\-\-ca\-cert=\fR\fIcacert\[char46]pem\fR
Specifies a PEM file containing the CA certificate for
verifying certificates presented to this program by SSL peers\[char46]  (This
may be the same certificate that SSL peers use to verify the
certificate specified on \fB\-c\fR or \fB\-\-certificate\fR, or it may
be a different one, depending on the PKI design in use\[char46])
.TP
\fB\-C none\fR
.TQ .5in
\fB\-\-ca\-cert=none\fR
Disables verification of certificates presented by SSL peers\[char46]  This
introduces a security risk, because it means that certificates cannot
be verified to be those of known trusted hosts\[char46]
.RE
.SS "Other Options"
.RS
.TP
\fB\-\-db\fR \fIdatabase\fR
The OVSDB database remote to contact\[char46]  If the \fBOVN_SB_DB\fR
environment variable is set, its value is used as the default\[char46]
Otherwise, the default is \fBunix:/usr/local/var/run/openvswitch/db\[char46]sock\fR, but this
default is unlikely to be useful outside of single-machine OVN test
environments\[char46]
.RE
.RS
.TP
\fB\-h\fR
.TQ .5in
\fB\-\-help\fR
Prints a brief help message to the console\[char46]
.TP
\fB\-V\fR
.TQ .5in
\fB\-\-version\fR
Prints version information to the console\[char46]
.RE
